/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package andrewcoledaniel_monopoly;


import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.net.URL;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.*;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author dakim0069
 */
public class MainMenu extends javax.swing.JFrame {
    private TutorialMenu tutorial;
    private GameScreen gameScreen;
    private HighScoreMenu highScoreMenu;
    public int[] highscores = new int[5];
    public String[] date = new String[5];
    public MainMusic mainBgm;
    private Thread mainBgmThread;
    public static int limitedTurns;
    public static long limitedTime;
    
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        monopolyImage();
        readHighScore();
        mainBgm = new MainMusic();
        mainBgmThread = new Thread(mainBgm);
        mainBgmThread.start();
    }
    
    private void readHighScore()
    {
        InputStream inp = MainMenu.class.getResourceAsStream("saves/HighScores.txt");
        Scanner scan = new Scanner(inp);
        
        for(int i=0; i<5; i++)
        {
            highscores[i] = scan.nextInt();
            date[i] = scan.nextLine();
        }
    }
    
    private void monopolyImage()
    {
        Image img;
        
        //Title image
        URL urlMonopoly = GameScreen.class.getResource("saves/MonoPoly.png");
        ImageIcon mply = new ImageIcon(urlMonopoly);
        img = mply.getImage();
        mply = new ImageIcon(img.getScaledInstance(lblTitle.getWidth(), lblTitle.getHeight(), Image.SCALE_FAST));
        lblTitle.setIcon(mply);
        
        //highscore button image
        btnHighScores.setOpaque(false);
        btnHighScores.setFocusPainted(false);
        btnHighScores.setBorderPainted(false);
        btnHighScores.setContentAreaFilled(false);
        btnHighScores.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
        URL urlHighScore = GameScreen.class.getResource("saves/highScores.jpg");
        ImageIcon scores = new ImageIcon(urlHighScore);
        img = scores.getImage();
        scores = new ImageIcon(img.getScaledInstance(btnHighScores.getWidth(), btnHighScores.getHeight(), Image.SCALE_FAST));
        btnHighScores.setIcon(scores);
        
        //new game button image
        btnHighScores.setBorder(null);
        URL urlNewGame = GameScreen.class.getResource("saves/newGame.png");
        ImageIcon newGame = new ImageIcon(urlNewGame);
        img = newGame.getImage();
        newGame = new ImageIcon(img.getScaledInstance(btnNewGame.getWidth(), btnNewGame.getHeight(), Image.SCALE_FAST));
        btnNewGame.setIcon(newGame);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNewGame = new javax.swing.JButton();
        btnTutorial = new javax.swing.JButton();
        btnHighScores = new javax.swing.JButton();
        btnLoadSave = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monopoly Menu");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        btnNewGame.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnNewGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });

        btnTutorial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnTutorial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTutorial.setLabel("Tutorial");
        btnTutorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutorialActionPerformed(evt);
            }
        });

        btnHighScores.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnHighScores.setText("");
        btnHighScores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHighScores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighScoresActionPerformed(evt);
            }
        });

        btnLoadSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnLoadSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLoadSave.setLabel("Load Save");
        btnLoadSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadSaveActionPerformed(evt);
            }
        });

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Monopoly");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHighScores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTutorial, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoadSave, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnHighScores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnLoadSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTutorial, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGameActionPerformed
        String[] gameOptions = {"limited turn", "limited time", "infinite"};
        String[] computerChoice = {"1 Computer", "2 Computers", "3 Computers"};
        int gameMode = JOptionPane.showOptionDialog(null, "Which mode do you want to play?", "Mode Selection", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, gameOptions , gameOptions[0]);
        
        String input = "";
        try { 
            if(gameMode == 0){
                input = JOptionPane.showInputDialog("How many turns would you like to play?");
                limitedTurns = Integer.parseInt(input);
            } else if(gameMode == 1){
                input = JOptionPane.showInputDialog("How long would you like the game to be? (minute)");
                limitedTime = Long.parseLong(input);
            }
        }catch (NumberFormatException e) {
            input = null;
        }
        
        
        if(gameMode != -1 && input != null)
        {
            int numPlayers = JOptionPane.showOptionDialog(null, "How many opponents do you want to play against", "Computer Player Selection", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, computerChoice, computerChoice[0]);
            numPlayers += 2;
            if(numPlayers != -1)
            {
                mainBgm.musicOff();
                gameScreen = new GameScreen(this, gameMode, numPlayers);
                gameScreen.setVisible(true);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_btnNewGameActionPerformed

    private void btnTutorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutorialActionPerformed
        if(tutorial == null)
        {
            tutorial = new TutorialMenu(this);
        }
        tutorial.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnTutorialActionPerformed

    private void btnHighScoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighScoresActionPerformed
        if(highScoreMenu == null)
        {
            highScoreMenu = new HighScoreMenu(this);
        }
        highScoreMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnHighScoresActionPerformed

    private void btnLoadSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadSaveActionPerformed
        String saveFilePath = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = fileChooser.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            saveFilePath = fileChooser.getSelectedFile().getAbsolutePath();
        }
        File saveFile = new File(saveFilePath + "/MonopolySave.txt");
        
        try {
            FileInputStream in = new FileInputStream(saveFile);
            ObjectInputStream s = new ObjectInputStream(in);
            int gameMode = s.readInt();
            int currentTurn = s.readInt();
            int numPlayers = s.readInt();
            Player[] playerArray = (Player[]) s.readObject();
            mainBgm.musicOff();
            //gameScreen = new GameScreen(this, gameMode, currentTurn, numPlayers, playerArray);
            gameScreen.setVisible(true);
            this.setVisible(false);
        } catch (NullPointerException | IOException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex, "File selection error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLoadSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHighScores;
    private javax.swing.JButton btnLoadSave;
    private javax.swing.JButton btnNewGame;
    private javax.swing.JButton btnTutorial;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}

class MainMusic implements Runnable {
    private Clip mainSong;
    
    @Override
    public void run() 
    {
        try{
            mainSong = AudioSystem.getClip();
            //Dubby Jinglefunk's Not So Silent Night by Speck (c) copyright 2021 Licensed under a Creative Commons Attribution Noncommercial  (3.0) license. http://dig.ccmixter.org/files/speck/64503 Ft: Admiral Bob, Martijn de Boer, airtone, Carosone
            AudioInputStream inputBgm = AudioSystem.getAudioInputStream(MainMusic.class.getResourceAsStream("saves/Dubby_Jinglefunk.wav"));   
            mainSong.open(inputBgm);
            mainSong.loop(Clip.LOOP_CONTINUOUSLY);
            this.musicOn();
            
        } catch (Exception e)
        {
            System.out.println(e);
        }
    }
    public void musicOff()
    {
        mainSong.stop();
    }
    
    public void musicOn()
    {
        mainSong.start();
    }
}
